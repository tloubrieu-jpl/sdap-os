[metadata]
name = sdap
version = file: src/sdap/VERSION.txt
author = SDAP
author_email = thomas.g.loubrieu@jpl.nasa.gov
description = Demo of usage of object storage for SDAP
long_description = file: README.md
long_description_content_type = text/markdown
license = apache-2.0
keywords = sdap, cog, s3
url =
download_url =
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering


[options]
install_requires =
    boto3==1.20.20
    matplotlib==3.5.0
    geopandas==0.10.2
    utm==0.7.0
    mgrs==1.4.2
    rioxarray==0.9.0
    xarray==0.20.2
    #rasterio==1.2.10
    PyYAML==6.0
    pyproj==3.3.0
    ray[default]==1.9.0
    numpy==1.21.4
    fsspec==2021.11.1
    requests==2.26.0 # for fsspec
    aiohttp==3.8.1 # for fsspec
    scipy==1.7.3 # to use wmts as cartopy background
    OWSLib==0.25.0
    s2sphere==0.2.5
    flask-restful==0.3.9
    flask-apispec==0.11.1

zip_safe = False
include_package_data = True
package_dir =
    = src
packages = find:
python_requires = >= 3.9
test_suite = sdap.test


[options.extras_require]
# see https://scitools.org.uk/cartopy/docs/latest/installing.html to install cartopy prerequisites
dev =
    cartopy==0.20.1


ingestion =
    netCDF4==1.5.8

# ðŸ‘‰ Note: The ``-stubs`` and ``types-`` dependencies above â†‘ in the ``dev``
# extra must be duplicated in ``.pre-commit-config.yaml`` in order for ``tox``
# to successfully run ``mypy`` to successfully do the static type linting.
# You can run ``mypy`` standalone just fine. This repetition is unfortunate
# but we don't have a way around it right now ðŸ˜”


[options.entry_points]
console_scripts =
    sdap=sdap.main:main

[options.packages.find]
where = src


[options.package_data]


[coverage:run]
# No patterns to omit at this time


[test]

[tool:pytest]
addopts = -n auto

[install]

[flake8]
max-line-length = 120
extend-exclude = docs,tests,setup.py
docstring_convention = google

# Ignoring:
# E203 prevents flake8 from complaining about whitespace around slice
# components. Black formats per PEP8 and flake8 doesn't like some of
# this.
#
# E501 prevents flake8 from complaining line lengths > 79. We will use
# flake8-bugbear's B950 to handle line length lint errors. This trips
# when a line is > max-line-length + 10%.
#
# W503 is ignored for ``pds-doi-service`` not just because it makes use of
# left-aligned binary operators in multi-line expressions, but because the
# opposite advice is now the recommended practice; see
# â€¢ https://rhodesmill.org/brandon/slides/2012-11-pyconca/#laying-down-the-law
# â€¢ https://github.com/PyCQA/pycodestyle/pull/502
# â€¢ https://www.flake8rules.com/rules/W503.html
# â€¢ ET Tufte, _Seeing with Fresh Eyes: Meaning, Space, Data, Truth_, Graphics
#   Press 2020, p.14.
extend-ignore = E203, E501, W503

# Selects following test categories:
# D: Docstring errors and warnings
# E, W: PEP8 errors and warnings
# F: PyFlakes codes
# N: PEP8 Naming plugin codes
# B: flake8-bugbear codes
# B***: Specific flake8-bugbear opinionated warnings to trigger
#   B902: Invalid first argument used for method. Use self for instance
#       methods, and cls for class methods
#   B903: Use collections.namedtuple (or typing.NamedTuple) for data classes
#       that only set attributes in an __init__ method, and do nothing else.
#   B950: Line too long. This is a pragmatic equivalent of pycodestyle's
#       E501: it considers "max-line-length" but only triggers when the value
#       has been exceeded by more than 10%.
select = D,E,F,N,W,B,B902,B903,B950

[mypy]
# No patterns to ignore at this time